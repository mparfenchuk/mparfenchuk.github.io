{"version":3,"sources":["ducks/routines.ts","ducks/reducer.ts","ducks/paginate.ts","ducks/storage.ts","ducks/toasts.ts","ducks/sagas.ts","ducks/store.ts","ducks/initializeItem.ts","ducks/tooltipPositions.ts","ducks/validation.ts","components/ColorPicker.tsx","ducks/emulateUploading.ts","components/Dropzone.tsx","components/CreateItemDialog.tsx","components/UpdateItemDialog.tsx","components/Toasts.tsx","components/Tooltip.tsx","components/Pagination.tsx","components/PhotoCard.tsx","components/MainPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["getItemsRoutine","createRoutine","trigger","page","success","paginatedItems","failure","error","fulfill","addItemRoutine","item","updateItemRoutine","deleteItemRoutine","initialState","totalPages","items","loading","undefined","reducer","state","action","TRIGGER","type","SUCCESS","includes","payload","FAILURE","FULFILL","paginate","itemsPerPage","offset","slice","Math","ceil","length","internalItems","JSON","parse","localStorage","getItem","getItems","addItem","newItems","setItem","stringify","updateItem","map","element","id","tooltip","deleteItem","filter","infoToast","toastId","text","toast","info","autoClose","successToast","update","render","TYPE","errorToast","ERROR","requestGetItems","requestAddItem","requestUpdateItem","requestDeleteItem","watchGetItems","watchAddItem","watchUpdateItem","watchDeleteItem","result","delay","put","message","title","select","takeEvery","rootSaga","root","all","fork","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","initializeItem","uuidv1","url","color","position","tooltipPositions","value","label","validation","Yup","shape","required","min","max","useStyles","makeStyles","theme","createStyles","display","width","picker","zIndex","marginBottom","spacing","top","left","right","bottom","background","ColorPicker","name","placeholder","setFieldValue","handleBlur","touched","classes","useState","showPicker","className","TextField","margin","fullWidth","onClick","onBlur","helperText","Boolean","InputProps","readOnly","style","disableAlpha","onChangeComplete","hex","apiCall","file","Promise","resolve","reject","setTimeout","reader","FileReader","onload","onabort","onerror","readAsDataURL","dropzone","height","padding","cursor","border","palette","divider","outline","photoPreview","maxHeight","maxWidth","objectFit","loadingContainer","justifyContent","alignItems","Dropzone","setError","setLoading","onDrop","useCallback","acceptedFiles","a","useDropzone","multiple","accept","getRootProps","getInputProps","FormControl","Typography","src","alt","CircularProgress","FormHelperText","filled","CreateItemDialog","open","closeDialog","dispatch","useDispatch","Dialog","onClose","aria-labelledby","DialogTitle","initialValues","validationSchema","onSubmit","values","isValid","handleSubmit","handleChange","errors","autoComplete","DialogContent","onChange","option","MenuItem","key","DialogActions","Button","disabled","leftIcon","marginRight","grow","flexGrow","UpdateItemDialog","fontSize","fontFamily","borderRadius","boxShadow","Toasts","toastClassName","closeOnClick","closeButton","newestOnTop","transform","marginTop","marginLeft","container","props","Tooltip","children","visibility","setVisibility","onMouseEnter","onMouseLeave","clsx","getClass","variant","pagination","listStyle","pageElement","defaultCursor","iconOpacity","opacity","pageLink","pageWithBorder","activeLink","backgroundColor","Pagination","pageCount","onPageChange","pageRangeDisplayed","marginPagesDisplayed","previousLabel","nextLabel","breakLabel","breakClassName","breakLinkClassName","initialPage","forcePage","disableInitialCallback","containerClassName","pageClassName","pageLinkClassName","activeClassName","activeLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","disabledClassName","media","PhotoCard","openDialog","Card","CardActionArea","CardMedia","image","CardContent","flexDirection","toolbar","borderBottom","gridRoot","progress","fab","MainPage","openCreateItemDialog","setOpenCreateItemDialog","openUpdateItemDialog","setOpenUpdateItemDialog","useSelector","useEffect","CssBaseline","Container","Toolbar","disableGutters","Grid","justify","xs","sm","md","selected","Fab","createMuiTheme","typography","join","App","ThemeProvider","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dd97977f.chunk.js","sourcesContent":["import { createRoutine } from 'redux-saga-routines';\n\nimport { Pagination, Item } from './types';\n\nconst getItemsRoutine = createRoutine('GET_ITEMS', { \n    trigger: (page: number) => page,\n    success: (paginatedItems: Pagination) => ({ paginatedItems }),\n    failure: (error: string) => ({ error }),\n    fulfill: () => null,\n});\n\nconst addItemRoutine = createRoutine('ADD_ITEM', { \n    trigger: (item: Item) => item,\n    success: (paginatedItems: Pagination) => ({ paginatedItems }),\n    failure: () => null,\n    fulfill: () => null,\n});\n\nconst updateItemRoutine = createRoutine('UPDATE_ITEM', { \n    trigger: (item: Item) => item,\n    success: (paginatedItems: Pagination) => ({ paginatedItems }),\n    failure: () => null,\n    fulfill: () => null,\n});\n\nconst deleteItemRoutine = createRoutine('DELETE_ITEM', { \n    trigger: (item: Item) => item,\n    success: (paginatedItems: Pagination) => ({ paginatedItems }),\n    failure: () => null,\n    fulfill: () => null,\n});\n\nexport {\n    getItemsRoutine,\n    addItemRoutine,\n    updateItemRoutine,\n    deleteItemRoutine\n};","import { State, Actions } from './types';\nimport { getItemsRoutine, addItemRoutine, updateItemRoutine, deleteItemRoutine } from './routines';\n\nexport const initialState: State = {\n    page: 1,\n    totalPages: 0,\n    items: [],\n    loading: false,\n    error: undefined\n}\n\nconst reducer = (state = initialState, action: Actions): State => {\n    if(getItemsRoutine.TRIGGER === action.type) {\n        return {\n            ...state,\n            loading: true,\n            error: undefined\n        }\n    } else if ([\n        getItemsRoutine.SUCCESS, \n        addItemRoutine.SUCCESS, \n        updateItemRoutine.SUCCESS, \n        deleteItemRoutine.SUCCESS\n    ].includes(action.type)) {\n        return {\n            ...state,\n            ...action.payload.paginatedItems\n        }\n    } else if (getItemsRoutine.FAILURE === action.type) {\n        return {\n            ...state,\n            error: action.payload.error\n        }\n    } else if ([\n        getItemsRoutine.FULFILL, \n        addItemRoutine.FULFILL, \n        updateItemRoutine.FULFILL, \n        deleteItemRoutine.FULFILL\n    ].includes(action.type)) {\n        return {\n            ...state,\n            loading: false\n        }\n    } else {\n        return state\n    }\n}\n\nexport default reducer;","import { Item, Pagination } from './types';\n\nexport const paginate = (\n    items: Array<Item>, \n    page: number = 1, \n    itemsPerPage: number = 6\n): Pagination => {\n    const offset = (page - 1) * itemsPerPage;\n    const paginatedItems = items.slice(offset).slice(0, itemsPerPage);\n    const totalPages = Math.ceil(items.length / itemsPerPage);\n    return {\n        page,\n        totalPages,\n        items: paginatedItems\n    };\n};","\nimport { Item, Pagination } from './types';\nimport { paginate } from './paginate';\n\nconst internalItems = () => JSON.parse(localStorage.getItem('photo_items') || '[]'); \n\nconst getItems = (page: number) => paginate(internalItems(), page)\n\nconst addItem = (item: Item, page: number): Pagination => {\n    const newItems = [item, ...internalItems()]\n    localStorage.setItem('photo_items', JSON.stringify(newItems))\n    return paginate(newItems, page)\n}\n\nconst updateItem = (item: Item, page: number): Pagination => {\n    const newItems = internalItems().map((element: Item) => \n        element.id === item.id ? {\n            ...element,\n            ...item,\n            tooltip: {\n                ...element.tooltip,\n                ...item.tooltip\n            }\n        } : element\n    )\n    localStorage.setItem('photo_items', JSON.stringify(newItems))\n    return paginate(newItems, page)\n}\n\nconst deleteItem = (item: Item, page: number): Pagination => {\n    const newItems = internalItems().filter((element: Item) => element.id !== item.id)\n    localStorage.setItem('photo_items', JSON.stringify(newItems))\n    return paginate(newItems, page)\n}\n\nexport {\n    getItems,\n    addItem,\n    updateItem,\n    deleteItem\n}\n","import { toast } from 'react-toastify';\n\nexport const infoToast = (toastId: string, text: string) => toast.info(text, { \n    autoClose: false, \n    toastId \n});\n\nexport const successToast = (toastId: string, text: string) => toast.update(toastId, { \n    render: text, \n    type: toast.TYPE.SUCCESS, \n    autoClose: 2000 \n})\n\nexport const errorToast = (toastId: string, text: string) => toast.update(toastId, { \n    render: text, \n    type: toast.TYPE.ERROR, \n    autoClose: 5000 \n})","import { put, takeEvery, all, fork, delay, select } from 'redux-saga/effects';\n\nimport { getItemsRoutine, addItemRoutine, updateItemRoutine, deleteItemRoutine } from './routines';\nimport { TriggerAddItem, TriggerDeleteItem, TriggerGetItems, TriggerUpdateItem } from './types';\nimport { getItems, addItem, updateItem, deleteItem } from './storage';\nimport { infoToast, successToast, errorToast } from './toasts';\n\nfunction* requestGetItems(action: TriggerGetItems) {\n    try {\n        const result = getItems(action.payload)\n        yield delay(1000);\n        yield put(getItemsRoutine.success(result));\n    } catch(e) {\n        yield put(getItemsRoutine.failure(e.message));\n    } finally {\n        yield put(getItemsRoutine.fulfill());\n    }\n}\n\nfunction* requestAddItem(action: TriggerAddItem) {\n    const toastId = `addItem-${action.payload.id}`\n    try {\n        infoToast(toastId, 'Add in progress...')\n        yield delay(1000);\n        const result = addItem(action.payload, 1)\n        yield put(addItemRoutine.success(result));\n        successToast(toastId, `${action.payload.title} added successfully.`)\n    } catch(e) {\n        errorToast(toastId, e.message)\n    } finally {\n        yield put(addItemRoutine.fulfill());\n    }\n}\n\nfunction* requestUpdateItem(action: TriggerUpdateItem) {\n    const toastId = `updateItem-${action.payload.id}`\n    try {\n        infoToast(toastId, 'Update in progress...')\n        const state = yield select()\n        yield delay(1000);\n        const result = updateItem(action.payload, state.page)\n        yield put(updateItemRoutine.success(result));\n        successToast(toastId, `${action.payload.title} updated successfully.`)\n    } catch(e) {\n        errorToast(toastId, e.message)\n    } finally {\n        yield put(updateItemRoutine.fulfill());\n    }\n}\n\nfunction* requestDeleteItem(action: TriggerDeleteItem) {\n    const toastId = `deleteItem-${action.payload.id}`\n    try {\n        infoToast(toastId, 'Delete in progress...')\n        const state = yield select()\n        yield delay(1000);\n        const result = deleteItem(action.payload, \n            (state.items.length === 1 && state.page === state.totalPages) ? \n            state.page - 1 : state.page)\n        yield put(deleteItemRoutine.success(result));\n        successToast(toastId, `${action.payload.title} deleted successfully.`)\n    } catch(e) {\n        errorToast(toastId, e.message)\n    } finally {\n        yield put(deleteItemRoutine.fulfill());\n    }\n}\n\nfunction* watchGetItems() {\n    yield takeEvery(getItemsRoutine.TRIGGER, requestGetItems);\n}\n\nfunction* watchAddItem() {\n    yield takeEvery(addItemRoutine.TRIGGER, requestAddItem);\n}\n\nfunction* watchUpdateItem() {\n    yield takeEvery(updateItemRoutine.TRIGGER, requestUpdateItem);\n}\n\nfunction* watchDeleteItem() {\n    yield takeEvery(deleteItemRoutine.TRIGGER, requestDeleteItem);\n}\n\nconst rootSaga = function* root() {\n    yield all([\n        fork(watchGetItems),\n        fork(watchAddItem),\n        fork(watchUpdateItem),\n        fork(watchDeleteItem)\n    ])\n}\n\nexport default rootSaga;","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport reducer from './reducer';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducer, applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;","import uuidv1 from 'uuid/v1';\n\nimport { Item } from './types';\n\nexport const initializeItem = ():Item => ({\n    id: uuidv1(),\n    url: '',\n    title: '',\n    tooltip: {\n        color: '',\n        position: ''\n    }\n})","export const tooltipPositions = [\n    {\n        value: 'top',\n        label: 'Top',\n    },\n    {\n        value: 'bottom',\n        label: 'Bottom',\n    },\n    {\n        value: 'left',\n        label: 'Left',\n    },\n    {\n        value: 'right',\n        label: 'Right',\n    },\n];","import * as Yup from 'yup';\n\nexport const validation = Yup.object().shape({\n    url: Yup.string()\n        .required('Upload photo'),\n    title: Yup.string()\n        .min(2, 'Title is too smal')\n        .max(20, 'Title is to long')\n        .required('Title is required'),\n    tooltip: Yup.object().shape({\n        color: Yup.string()\n            .required('Choose color'),\n        position: Yup.string()\n            .required('Choose position')\n    })\n});","import React, { useState } from 'react';\nimport { ChromePicker } from 'react-color';\n\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'inline-flex', \n            width: '100%'\n        },\n        picker: {\n            position: 'absolute', \n            zIndex: 1500,\n            marginBottom: theme.spacing(6),\n            top: 'auto',\n            left: 'auto',\n            right: 'auto',\n            bottom: 0\n        },\n        background: {\n            position: 'fixed', \n            top: 0, \n            right: 0, \n            bottom: 0, \n            left: 0\n        },\n    })\n);\n\ninterface ColorPickerProps {\n    name: string\n    label: string\n    placeholder: string,\n    setFieldValue: (field: string, value: string) => void\n    handleBlur: (e: React.FocusEvent<any>) => void\n    value: string,\n    touched?: boolean,\n    error?: string\n};\n\nconst ColorPicker: React.FC<ColorPickerProps> = ({ \n    name,\n    label,\n    placeholder,\n    setFieldValue, \n    handleBlur, \n    value,\n    touched,\n    error\n}) => {\n    const classes = useStyles()\n    const [picker, showPicker] = useState(false)\n\n    return (\n        <div className={classes.root}>\n            <TextField\n                name={name}\n                label={label}\n                placeholder={placeholder}\n                margin=\"normal\"\n                fullWidth\n                value={value}\n                onClick={() => showPicker(true)}\n                onBlur={handleBlur} \n                helperText={touched ? error : \"\"}\n                error={touched && Boolean(error)}\n                InputProps={{\n                    readOnly: true,\n                    style: { \n                        color: value === '' ? '#000000' : value \n                    } \n                }}\n            />\n            {picker && <div className={classes.picker}>\n                <div \n                    className={classes.background} \n                    onClick={() => showPicker(false)} \n                />\n                <ChromePicker \n                    disableAlpha\n                    color={value}\n                    onChangeComplete={\n                        color =>  setFieldValue(name, color.hex)\n                    }\n                />\n            </div>}\n        </div>\n    )\n};\n\nexport default ColorPicker;","export const apiCall = (file: File): Promise<any> => {\n    return new Promise<any>((resolve, reject) => {\n        setTimeout(() => {\n            const reader = new FileReader()\n            reader.onload = () => resolve(reader.result)\n            reader.onabort = () => reject('File reading was aborted')\n            reader.onerror = () => reject('File reading has failed')\n            reader.readAsDataURL(file)\n        }, 1000)\n    });\n}","import React, { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\n\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { apiCall } from '../ducks/emulateUploading';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        dropzone: {\n            height: 180,\n            padding: theme.spacing(1),\n            cursor: 'pointer',\n            border: `1px dashed ${theme.palette.divider}`,\n            outline: 'none !important',\n        },\n        photoPreview: {\n            maxHeight: '100%',  \n            maxWidth: '100%', \n            objectFit: 'cover',\n            width: '100%',\n            height: 180,\n            position: 'absolute',  \n            top: 0, \n            left: 0,\n            zIndex: 0\n        },\n        loadingContainer: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            width: '100%',\n            height: 'inherit',\n            position: 'absolute',  \n            top: 0, \n            left: 0,\n            zIndex: 1500\n        }\n    })\n);\n\ninterface DropzoneProps {\n    name: string\n    url: string\n    setFieldValue: (field: string, value: string) => void\n};\n\nconst Dropzone: React.FC<DropzoneProps> = ({ \n    name, \n    url, \n    setFieldValue \n}) => {\n    const classes = useStyles()\n    const [error, setError] = useState<string | undefined>()\n    const [loading, setLoading] = useState<boolean>(false)\n    const onDrop = useCallback(async acceptedFiles => {\n        setError(undefined)\n        setLoading(true)\n        try {\n            // save image on server and return url\n            const url = await apiCall(acceptedFiles[0])\n            setFieldValue(name, url)\n        } catch(error) {\n            setError(error)\n        } finally {\n            setLoading(false)\n        }\n    }, [name, setFieldValue])\n\n    const { getRootProps, getInputProps } = useDropzone({\n        multiple: false,\n        accept: 'image/*',\n        onDrop\n    })\n\n    return (\n        <FormControl fullWidth>\n            <div {...getRootProps({ className: classes.dropzone })}>\n                <input {...getInputProps()} />\n                {!loading && !Boolean(url) && <Typography>\n                    Drag 'n' drop some photo here or click to select photo*\n                </Typography>}\n                {url && <img\n                    className={classes.photoPreview}\n                    src={url}\n                    alt=\"Preview\"\n                />}\n                {loading && <div className={classes.loadingContainer}>\n                    <CircularProgress />\n                </div>}\n            </div>\n            {error && <FormHelperText error filled>\n                {error}\n            </FormHelperText>}\n        </FormControl>\n    )\n};\n\nexport default Dropzone;","import React from 'react';\nimport { Dispatch } from 'redux';\nimport { useDispatch } from 'react-redux';\nimport { Formik, FormikProps } from 'formik';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\n\nimport { addItemRoutine } from '../ducks/routines';\nimport { TriggerAddItem, Item } from '../ducks/types';\nimport { tooltipPositions } from '../ducks/tooltipPositions';\nimport { validation } from '../ducks/validation';\nimport { initializeItem } from '../ducks/initializeItem';\n\nimport ColorPicker from './ColorPicker';\nimport Dropzone from './Dropzone';\n\ninterface CreateItemProps {\n    open: boolean\n    closeDialog: () => void\n};\n\nconst CreateItemDialog: React.FC<CreateItemProps> = ({ \n    open, \n    closeDialog \n}) => {\n    const dispatch = useDispatch<Dispatch<TriggerAddItem>>()\n\n    return (\n        <Dialog \n            open={open} \n            onClose={closeDialog}\n            maxWidth=\"sm\"\n            fullWidth\n            aria-labelledby=\"form-dialog\"\n        >\n            <DialogTitle aria-labelledby=\"form-dialog-title\">\n                Create New Item\n            </DialogTitle>\n            <Formik\n                initialValues={initializeItem()}\n                validationSchema={validation}\n                onSubmit={(values: Item) => {\n                    dispatch(addItemRoutine(values))\n                    closeDialog()\n                }}\n            >\n                {({ \n                    isValid, \n                    handleSubmit, \n                    handleChange, \n                    handleBlur, \n                    values, \n                    errors, \n                    touched, \n                    setFieldValue\n                }: FormikProps<Item>) => (\n                    <form onSubmit={handleSubmit} autoComplete=\"off\">\n                        <DialogContent>\n                            <Dropzone \n                                name=\"url\"\n                                setFieldValue={setFieldValue} \n                                url={values.url} \n                            />\n                            <TextField\n                                name=\"title\"\n                                type=\"text\"\n                                label=\"Photo title\"\n                                placeholder=\"Photo title\"\n                                margin=\"normal\"\n                                fullWidth\n                                value={values.title}\n                                onChange={handleChange}\n                                onBlur={handleBlur} \n                                helperText={touched.title ? errors.title : \"\"}\n                                error={touched.title && Boolean(errors.title)}\n                            />\n                            <ColorPicker\n                                name=\"tooltip.color\"\n                                label=\"Tooltip color\"\n                                placeholder=\"Tooltip color\"\n                                setFieldValue={setFieldValue}\n                                handleBlur={handleBlur} \n                                value={values.tooltip.color}\n                                touched={touched.tooltip && touched.tooltip.color}\n                                error={errors.tooltip && errors.tooltip.color}\n                            />\n                            <TextField\n                                name=\"tooltip.position\" \n                                type=\"text\"\n                                label=\"Tooltip position\"\n                                placeholder=\"Tooltip position\"\n                                margin=\"normal\"\n                                fullWidth\n                                select\n                                onChange={handleChange}\n                                onBlur={handleBlur} \n                                value={values.tooltip.position}\n                                helperText={touched.tooltip && touched.tooltip.position ? \n                                    errors.tooltip && errors.tooltip.position \n                                    : \"\"}\n                                error={touched.tooltip && touched.tooltip.position \n                                    && Boolean(errors.tooltip && errors.tooltip.position)}\n                            >\n                                {tooltipPositions.map(option => (\n                                    <MenuItem \n                                        key={option.value} \n                                        value={option.value}\n                                    >\n                                        {option.label}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button \n                                type=\"button\" \n                                color=\"secondary\"\n                                onClick={closeDialog}\n                            >\n                                Cancel\n                            </Button>\n                            <Button \n                                type=\"submit\"\n                                color=\"primary\"\n                                disabled={!isValid}\n                            >\n                                Create\n                            </Button>\n                        </DialogActions>\n                    </form>\n                )}\n            </Formik>\n        </Dialog>\n    )\n};\n\nexport default CreateItemDialog;","import React from 'react';\nimport { Dispatch } from 'redux';\nimport { useDispatch } from 'react-redux';\nimport { Formik, FormikProps } from 'formik';\n\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport { updateItemRoutine, deleteItemRoutine } from '../ducks/routines';\nimport { TriggerUpdateItem, TriggerDeleteItem, Item } from '../ducks/types';\nimport { tooltipPositions } from '../ducks/tooltipPositions';\nimport { validation } from '../ducks/validation';\n\nimport ColorPicker from './ColorPicker';\nimport Dropzone from './Dropzone';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        leftIcon: {\n            marginRight: theme.spacing(1),\n        },\n        grow: {\n            flexGrow: 1,\n        },\n    })\n);\n\ninterface UpdateItemProps {\n    initialValues: Item\n    open: boolean\n    closeDialog: () => void\n};\n\nconst UpdateItemDialog: React.FC<UpdateItemProps> = ({ \n    initialValues, \n    open, \n    closeDialog \n}) => {\n    const classes = useStyles()\n    const dispatch = useDispatch<Dispatch<TriggerUpdateItem | TriggerDeleteItem>>()\n\n    return (\n        <Dialog \n            open={open} \n            onClose={closeDialog}\n            maxWidth=\"sm\"\n            fullWidth\n            aria-labelledby=\"form-dialog\"\n        >\n            <DialogTitle aria-labelledby=\"form-dialog-title\">\n                Update Item\n            </DialogTitle>\n            <Formik\n                initialValues={initialValues}\n                validationSchema={validation}\n                onSubmit={(values: Item) => {\n                    dispatch(updateItemRoutine(values))\n                    closeDialog()\n                }}\n            >\n                {({ \n                    isValid, \n                    handleSubmit, \n                    handleChange, \n                    handleBlur, \n                    values, \n                    errors, \n                    touched, \n                    setFieldValue\n                }: FormikProps<Item>) => (\n                    <form onSubmit={handleSubmit} autoComplete=\"off\">\n                        <DialogContent>\n                            <Dropzone \n                                name=\"url\"\n                                setFieldValue={setFieldValue} \n                                url={values.url} \n                            />\n                            <TextField\n                                name=\"title\"\n                                type=\"text\"\n                                label=\"Photo title\"\n                                placeholder=\"Photo title\"\n                                margin=\"normal\"\n                                fullWidth\n                                value={values.title}\n                                onChange={handleChange}\n                                onBlur={handleBlur} \n                                helperText={touched.title ? errors.title : \"\"}\n                                error={touched.title && Boolean(errors.title)}\n                            />\n                            <ColorPicker\n                                name=\"tooltip.color\"\n                                label=\"Tooltip color\"\n                                placeholder=\"Tooltip color\"\n                                setFieldValue={setFieldValue}\n                                handleBlur={handleBlur} \n                                value={values.tooltip.color}\n                                touched={touched.tooltip && touched.tooltip.color}\n                                error={errors.tooltip && errors.tooltip.color}\n                            />\n                            <TextField\n                                name=\"tooltip.position\" \n                                type=\"text\"\n                                label=\"Tooltip position\"\n                                placeholder=\"Tooltip position\"\n                                margin=\"normal\"\n                                fullWidth\n                                select\n                                onChange={handleChange}\n                                onBlur={handleBlur} \n                                value={values.tooltip.position}\n                                helperText={touched.tooltip && touched.tooltip.position ? \n                                    errors.tooltip && errors.tooltip.position \n                                    : \"\"}\n                                error={touched.tooltip && touched.tooltip.position \n                                    && Boolean(errors.tooltip && errors.tooltip.position)}\n                            >\n                                {tooltipPositions.map(option => (\n                                    <MenuItem \n                                        key={option.value} \n                                        value={option.value}\n                                    >\n                                        {option.label}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button \n                                type=\"button\"\n                                onClick={() => {\n                                    dispatch(deleteItemRoutine(values))\n                                    closeDialog()\n                                }}\n                            >\n                                <DeleteIcon className={classes.leftIcon} />\n                                Delete\n                            </Button>\n                            <div className={classes.grow}/>\n                            <Button \n                                type=\"button\" \n                                color=\"secondary\"\n                                onClick={closeDialog}\n                            >\n                                Cancel\n                            </Button>\n                            <Button \n                                type=\"submit\"\n                                color=\"primary\"\n                                disabled={!isValid}\n                            >\n                                Update\n                            </Button>\n                        </DialogActions>\n                    </form>\n                )}\n            </Formik>\n        </Dialog>\n    )\n};\n\nexport default UpdateItemDialog;","import React from 'react';\n\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        toast: {\n            padding: theme.spacing(2),\n            fontSize: theme.spacing(2),\n            fontFamily: 'Muli, sans-serif',\n            borderRadius: theme.spacing(1),\n            boxShadow: '0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)'\n        },\n    }),\n);\n\nconst Toasts: React.FC = () => {\n    const classes = useStyles()\n\n    return (\n        <ToastContainer\n            toastClassName={classes.toast} \n            closeOnClick={false}\n            closeButton={false} \n            newestOnTop\n        />\n    )\n};\n\nexport default Toasts;","import React, { useState } from 'react';\nimport clsx from 'clsx';\n\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\ninterface StyleProps {\n    color: string\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            position: 'relative'\n        },\n        tooltip: {\n            position: 'absolute',\n            zIndex: 1500,\n        },\n        bottom: {\n            top: '100%',\n            left: '50%',\n            transform: 'translateX(-50%)',\n            marginTop: theme.spacing(1)\n        },\n        top: {\n            bottom: '100%',\n            left: '50%',\n            transform: 'translateX(-50%)',\n            marginBottom: theme.spacing(1)\n        },\n        left: {\n            right: '100%',\n            top: '50%',\n            transform: 'translateY(-50%)',\n            marginRight: theme.spacing(1)\n        },\n        right: {\n            left: '100%',\n            top: '50%',\n            transform: 'translateY(-50%)',\n            marginLeft: theme.spacing(1)\n        },\n        container: {\n            color: 'white',\n            background: (props: StyleProps) => props.color,\n            padding: theme.spacing(1),\n            borderRadius: theme.spacing(1),\n            boxShadow: '0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)'\n        }\n    }),\n);\n\ninterface TooltipProps {\n    position: string\n    color: string\n    title: string\n}\n\nconst Tooltip: React.FC<TooltipProps> = ({ \n    children, \n    position = 'top', \n    color = '#000000', \n    title = 'Tooltip'\n}) => {\n    const classes = useStyles({ color })\n    const [visibility, setVisibility] = useState<boolean>(false)\n\n    const getClass = (position: string):string => {\n        switch(position){\n            case 'top':\n                return classes.top\n            case 'bottom':\n                return classes.bottom\n            case 'right':\n                return classes.right\n            case 'left':\n                return classes.left\n            default:\n                return ''\n        }\n    }\n\n    return (\n        <div \n            className={classes.root}\n            onMouseEnter={() => setVisibility(true)}\n            onMouseLeave={() => setVisibility(false)}\n        >\n            {children}\n            {visibility && <div className={clsx(classes.tooltip, getClass(position))}>\n                <div className={classes.container}>\n                    <Typography variant=\"caption\">\n                        {title}\n                    </Typography>\n                </div>\n            </div>}\n        </div>\n    )\n};\n\nexport default Tooltip;","import React from 'react';\nimport ReactPaginate from 'react-paginate';\nimport clsx from 'clsx';\n\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport ArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport ArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        pagination: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n        },\n        container: {\n            display: 'flex',\n            alignItems: 'center',\n            listStyle: 'none',\n            fontSize: '20px',\n            padding: 0,\n            marginTop: theme.spacing(1),\n            marginBottom: theme.spacing(1)\n        },\n        pageElement: {\n            margin: theme.spacing(1),\n            cursor: 'pointer'\n        },\n        defaultCursor: {\n            cursor: 'default'\n        },\n        iconOpacity:{\n            opacity: 0.26,\n        },\n        pageLink: {\n            display: 'flex',\n            padding: `0 ${theme.spacing(1)}px`,\n            outline: 'none',\n            borderRadius: '2px',\n        },\n        pageWithBorder: {\n            border: 'solid 1px #c8c7cc'\n        },\n        activeLink: {\n            backgroundColor: '#efeff4',\n        },\n    })\n);\n\ninterface SelectedPage {\n    selected: number\n};\n\ninterface PaginationProps {\n    page: number\n    pageCount: number\n    onPageChange: (page: SelectedPage) => void\n};\n\nconst Pagination: React.FC<PaginationProps> = ({ \n    page, \n    pageCount, \n    onPageChange \n}) => {\n    const classes = useStyles()\n\n    return (\n        <div className={classes.pagination}>\n            <ReactPaginate\n                pageCount={pageCount}\n                pageRangeDisplayed={2}\n                marginPagesDisplayed={1}\n                previousLabel={<ArrowLeftIcon />}\n                nextLabel={<ArrowRightIcon />}\n                breakLabel={'...'}\n                breakClassName={classes.pageElement}\n                breakLinkClassName={classes.pageLink}\n                onPageChange={onPageChange}\n                initialPage={0}\n                forcePage={page - 1}\n                disableInitialCallback\n                containerClassName={classes.container}\n                pageClassName={classes.pageElement}\n                pageLinkClassName={clsx(classes.pageLink, classes.pageWithBorder)}\n                activeClassName={classes.defaultCursor}\n                activeLinkClassName={classes.activeLink}\n                previousClassName={classes.pageElement}\n                previousLinkClassName={classes.pageLink}\n                nextClassName={classes.pageElement}\n                nextLinkClassName={classes.pageLink}\n                disabledClassName={clsx(classes.defaultCursor, classes.iconOpacity)}\n            />\n        </div>\n    )\n}\n\nexport default Pagination;","import React from 'react';\n\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        media: {\n            height: 180,\n        },\n    })\n);\n\ninterface PhotoCardProps {\n    title: string\n    url: string\n    openDialog: () => void\n};\n\nconst PhotoCard: React.FC<PhotoCardProps> = ({ \n    title, \n    url, \n    openDialog \n}) => {\n    const classes = useStyles()\n\n    return (\n        <Card onClick={openDialog}>\n            <CardActionArea>\n                <CardMedia\n                    className={classes.media}\n                    image={url}\n                    title={title}\n                />\n                <CardContent>\n                    <Typography variant=\"h6\">\n                        {title}\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n        </Card>\n    )\n};\n\nexport default PhotoCard;","import React, { useEffect, useState } from 'react';\nimport { Dispatch } from 'redux';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\n\nimport { getItemsRoutine } from '../ducks/routines';\nimport { State, Item, TriggerGetItems } from '../ducks/types';\nimport { initializeItem } from '../ducks/initializeItem';\n\nimport CreateItemDialog from './CreateItemDialog';\nimport UpdateItemDialog from './UpdateItemDialog';\nimport Toasts from './Toasts';\nimport Tooltip from './Tooltip';\nimport Pagination from './Pagination';\nimport PhotoCard from './PhotoCard';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            height: '100vh',\n            display: 'flex',\n            flexDirection: 'column'\n        },\n        toolbar: {\n            borderBottom: `1px solid ${theme.palette.divider}`,\n            padding: theme.spacing(2),\n        },\n        grow: {\n            flexGrow: 1,\n        },\n        gridRoot: {\n            marginTop: theme.spacing(2),\n            marginBottom: theme.spacing(2),\n        },\n        progress: {\n            margin: theme.spacing(2),\n        },\n        fab: {\n            position: 'fixed',\n            top: 'auto',\n            left: 'auto',\n            right: theme.spacing(3),\n            bottom: theme.spacing(3),\n            margin: 0,\n        }\n    })\n);\n\ninterface UpdateItemState {\n    open: boolean\n    initialValues: Item\n};\n\nconst MainPage: React.FC = () => {\n    const classes = useStyles()\n    const dispatch = useDispatch<Dispatch<TriggerGetItems>>()\n    \n    const [openCreateItemDialog, setOpenCreateItemDialog] = useState<boolean>(false);\n    const [openUpdateItemDialog, setOpenUpdateItemDialog] = useState<UpdateItemState>({\n        open: false,\n        initialValues: initializeItem()\n    });\n\n    const page = useSelector<State, number>(state => state.page)\n    const totalPages = useSelector<State, number>(state => state.totalPages)\n    const items = useSelector<State, Array<Item>>(state => state.items)\n    const loading = useSelector<State, boolean>(state => state.loading)\n    const error = useSelector<State, string | undefined>(state => state.error)\n\n    useEffect(() => {\n        dispatch(getItemsRoutine(1))\n    }, [dispatch]);\n\n    return (\n        <>\n            <CssBaseline />\n            <Container \n                maxWidth=\"lg\" \n                className={classes.container}\n            >\n                <Toolbar \n                    className={classes.toolbar} \n                    disableGutters\n                >\n                    <Typography \n                        variant=\"h6\" \n                        className={classes.grow}\n                    >\n                        Photos Admin Panel\n                    </Typography>\n                </Toolbar>\n                <Grid \n                    container \n                    className={classes.gridRoot}\n                    justify={loading ? \"center\" : \"flex-start\"}\n                    spacing={2}\n                >\n                    {loading && <CircularProgress className={classes.progress} />}\n                    {!loading && items.length === 0 && <Grid item xs={12}>\n                        <Typography>\n                            There is no items...\n                        </Typography>\n                    </Grid>}\n                    {error && <Grid item xs={12}>\n                        <Typography color=\"error\">\n                            {error}\n                        </Typography>\n                    </Grid>}\n                    {!loading && items.length > 0 && items.map(item => (\n                        <Grid \n                            key={item.id} \n                            item \n                            xs={12} \n                            sm={6} \n                            md={4}\n                        >\n                            <Tooltip title={item.title} {...item.tooltip}>\n                                <PhotoCard\n                                    title={item.title}\n                                    url={item.url}\n                                    openDialog={() => setOpenUpdateItemDialog({ \n                                        initialValues: item, \n                                        open: true \n                                    })}\n                                />\n                            </Tooltip>\n                        </Grid>\n                    ))}\n                </Grid>\n                <div className={classes.grow} />\n                {totalPages !== 0 &&<Pagination\n                    page={page}\n                    pageCount={totalPages}\n                    onPageChange={page => dispatch(getItemsRoutine(page.selected + 1))}\n                />}\n            </Container>\n            <CreateItemDialog \n                open={openCreateItemDialog} \n                closeDialog={() => setOpenCreateItemDialog(false)}\n            />\n            <UpdateItemDialog \n                initialValues={openUpdateItemDialog.initialValues}\n                open={openUpdateItemDialog.open} \n                closeDialog={() => setOpenUpdateItemDialog({ \n                    initialValues: initializeItem(), \n                    open: false \n                })}\n            />\n            <Fab\n                className={classes.fab}\n                color=\"secondary\" \n                onClick={() => setOpenCreateItemDialog(true)}\n            >\n                <AddIcon />\n            </Fab>\n            <Toasts />\n        </>\n    )\n};\n\nexport default MainPage;","import React from 'react';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { Provider } from 'react-redux';\n\nimport store from './ducks/store';\nimport MainPage from './components/MainPage';\n\nconst theme = createMuiTheme({\n    typography: {\n        fontFamily: [\n          'Muli',\n          'sans-serif'\n        ].join(','),\n    }\n});\n\nconst App: React.FC = () => (\n    <Provider store={store}>\n        <ThemeProvider theme={theme}>\n            <MainPage />\n        </ThemeProvider>\n    </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}