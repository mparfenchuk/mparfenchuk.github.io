{"version":3,"sources":["ducks/routines.js","ducks/reducer.js","ducks/sagas.js","ducks/store.js","components/ColorPicker.js","components/Dropzone.js","ducks/tooltipPositions.js","ducks/validation.js","components/CreateItemDialog.js","components/UpdateItemDialog.js","components/Tooltip.js","components/PhotoCard.js","components/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["getItemsRoutine","createRoutine","addItemRoutine","updateItemRoutine","deleteItemRoutine","initialState","items","loading","error","reducer","state","action","TRIGGER","includes","type","SUCCESS","payload","newItems","localStorage","setItem","JSON","stringify","map","item","id","tooltip","filter","FAILURE","FULFILL","requestGetItems","requestAddItem","requestUpdateItem","requestDeleteItem","watchGetItems","watchAddItem","watchUpdateItem","watchDeleteItem","parse","getItem","put","request","delay","success","failure","message","fulfill","uniqueId","url","title","takeEvery","rootSaga","root","all","fork","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","useStyles","makeStyles","theme","display","width","picker","position","zIndex","marginBottom","spacing","top","left","right","bottom","background","ColorPicker","name","label","placeholder","setFieldValue","handleBlur","value","touched","classes","useState","showPicker","className","TextField","margin","fullWidth","onClick","onChange","e","target","onBlur","helperText","Boolean","InputProps","style","color","hex","dropzone","height","padding","cursor","border","palette","divider","outline","photoPreview","maxHeight","maxWidth","objectFit","Dropzone","onDrop","useCallback","acceptedFiles","reader","FileReader","onabort","console","log","onerror","onload","binaryStr","result","readAsDataURL","useDropzone","multiple","accept","getRootProps","getInputProps","Typography","src","alt","tooltipPositions","validation","Yup","shape","required","min","max","CreateItemDialog","open","closeDialog","dispatch","useDispatch","Dialog","onClose","DialogTitle","initialValues","validationSchema","onSubmit","values","isValid","handleSubmit","handleChange","errors","autoComplete","DialogContent","select","option","MenuItem","key","DialogActions","Button","disabled","leftIcon","marginRight","grow","flexGrow","UpdateItemDialog","transform","marginTop","marginLeft","container","props","borderRadius","Tooltip","children","visibility","setVisibility","onMouseEnter","onMouseLeave","clsx","variant","media","PhotoCard","openDialog","Card","CardActionArea","CardMedia","image","CardContent","toolbar","borderBottom","gridRoot","progress","fab","MainPage","openCreateItemDialog","setOpenCreateItemDialog","openUpdateItemDialog","setOpenUpdateItemDialog","useSelector","useEffect","CssBaseline","Container","Toolbar","disableGutters","Grid","justify","CircularProgress","xs","length","sm","md","Fab","createMuiTheme","typography","fontFamily","join","App","ThemeProvider","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d71136f2.chunk.js","sourcesContent":["import { createRoutine } from 'redux-saga-routines';\n\nconst getItemsRoutine = createRoutine('GET_ITEMS');\nconst addItemRoutine = createRoutine('ADD_ITEM');\nconst updateItemRoutine = createRoutine('UPDATE_ITEM');\nconst deleteItemRoutine = createRoutine('DELETE_ITEM');\n\nexport {\n    getItemsRoutine,\n    addItemRoutine,\n    updateItemRoutine,\n    deleteItemRoutine\n};","import { getItemsRoutine, addItemRoutine, updateItemRoutine, deleteItemRoutine } from './routines';\n\nexport const initialState = {\n    items: [],\n    loading: false,\n    error: null\n}\n\nconst reducer = (state = initialState, action) => {\n    if([getItemsRoutine.TRIGGER, addItemRoutine.TRIGGER, updateItemRoutine.TRIGGER, deleteItemRoutine.TRIGGER].includes(action.type)) {\n        return {\n            ...state,\n            loading: true,\n            error: null\n        }\n    } else if (getItemsRoutine.SUCCESS === action.type) {\n        return {\n            ...state,\n            items: action.payload\n        }\n    } else if (addItemRoutine.SUCCESS === action.type) {\n        const newItems = [action.payload, ...state.items]\n        localStorage.setItem('photo_items', JSON.stringify(newItems))\n        return {\n            ...state,\n            items: newItems\n        }\n    } else if (updateItemRoutine.SUCCESS === action.type) {\n        const newItems = state.items.map(item => \n            item.id === action.payload.id ? {\n                ...item,\n                ...action.payload,\n                tooltip: {\n                    ...item.tooltip,\n                    ...action.payload.tooltip\n                }\n            } : item\n        )\n        localStorage.setItem('photo_items', JSON.stringify(newItems))\n        return {\n            ...state,\n            items: newItems\n        }\n    } else if (deleteItemRoutine.SUCCESS === action.type) {\n        const newItems = state.items.filter(item => item.id !== action.payload.id)\n        localStorage.setItem('photo_items', JSON.stringify(newItems))\n        return {\n            ...state,\n            items: newItems\n        }\n    } else if ([getItemsRoutine.FAILURE, addItemRoutine.FAILURE, updateItemRoutine.FAILURE, deleteItemRoutine.FAILURE].includes(action.type)) {\n        return {\n            ...state,\n            error: action.payload\n        }\n    } else if ([getItemsRoutine.FULFILL, addItemRoutine.FULFILL, updateItemRoutine.FULFILL, deleteItemRoutine.FULFILL].includes(action.type)) {\n        return {\n            ...state,\n            loading: false\n        }\n    } else {\n        return state\n    }\n}\n\nexport default reducer;","import { put, takeEvery, all, fork, delay } from 'redux-saga/effects';\nimport uniqueId from 'lodash/uniqueId';\n\nimport { getItemsRoutine, addItemRoutine, updateItemRoutine, deleteItemRoutine } from './routines';\n\nconst items = JSON.parse(localStorage.getItem('photo_items')) || [];\n\nfunction* requestGetItems() {\n    try {\n        yield put(getItemsRoutine.request());\n        yield delay(1000);\n        yield put(getItemsRoutine.success(items));\n    } catch(e) {\n        yield put(getItemsRoutine.failure(e.message));\n    } finally {\n        yield put(getItemsRoutine.fulfill());\n    }\n}\n\nfunction* requestAddItem(action) {\n    try {\n        yield put(addItemRoutine.request());\n        yield delay(1000);\n        yield put(addItemRoutine.success({ \n            id: uniqueId(),\n            url: action.payload.url,\n            title: action.payload.title,\n            tooltip: {\n                ...action.payload.tooltip\n            }\n        }));\n    } catch(e) {\n        yield put(addItemRoutine.failure(e.message));\n    } finally {\n        yield put(addItemRoutine.fulfill());\n    }\n}\n\nfunction* requestUpdateItem(action) {\n    try {\n        yield put(updateItemRoutine.request());\n        yield delay(1000);\n        yield put(updateItemRoutine.success({ ...action.payload }));\n    } catch(e) {\n        yield put(updateItemRoutine.failure(e.message));\n    } finally {\n        yield put(updateItemRoutine.fulfill());\n    }\n}\n\nfunction* requestDeleteItem(action) {\n    try {\n        yield put(deleteItemRoutine.request());\n        yield delay(1000);\n        yield put(deleteItemRoutine.success({ \n            id: action.payload.id \n        }));\n    } catch(e) {\n        yield put(deleteItemRoutine.failure(e.message));\n    } finally {\n        yield put(deleteItemRoutine.fulfill());\n    }\n}\n\nfunction* watchGetItems() {\n    yield takeEvery(getItemsRoutine.TRIGGER, requestGetItems);\n}\n\nfunction* watchAddItem() {\n    yield takeEvery(addItemRoutine.TRIGGER, requestAddItem);\n}\n\nfunction* watchUpdateItem() {\n    yield takeEvery(updateItemRoutine.TRIGGER, requestUpdateItem);\n}\n\nfunction* watchDeleteItem() {\n    yield takeEvery(deleteItemRoutine.TRIGGER, requestDeleteItem);\n}\n\nconst rootSaga = function* root() {\n    yield all([\n        fork(watchGetItems),\n        fork(watchAddItem),\n        fork(watchUpdateItem),\n        fork(watchDeleteItem)\n    ])\n}\n\nexport default rootSaga;","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport reducer from './reducer';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(reducer, applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;","import React, { useState } from 'react';\n\nimport { ChromePicker } from 'react-color';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'inline-flex', \n        width: '100%'\n    },\n    picker: {\n        position: 'absolute', \n        zIndex: 1500,\n        marginBottom: theme.spacing(2),\n        top: 'auto',\n        left: 'auto',\n        right: 'auto',\n        bottom: 0\n    },\n    background: {\n        position: 'fixed', \n        top: 0, \n        right: 0, \n        bottom: 0, \n        left: 0\n    },\n}));\n\nconst ColorPicker = ({ \n    name,\n    label,\n    placeholder,\n    setFieldValue, \n    handleBlur, \n    value,\n    touched,\n    error\n}) => {\n    const classes = useStyles()\n    const [picker, showPicker] = useState(false)\n\n    return (\n        <div className={classes.root}>\n            <TextField\n                name={name}\n                label={label}\n                placeholder={placeholder}\n                margin=\"normal\"\n                fullWidth\n                value={value}\n                onClick={() => showPicker(true)}\n                onChange={e => setFieldValue(name, e.target.value)}\n                onBlur={handleBlur} \n                helperText={touched ? error : \"\"}\n                error={touched && Boolean(error)}\n                InputProps={{ \n                    style: { \n                        color: value === '' ? '#ffffff' : value \n                    } \n                }}\n            />\n            {picker && <div className={classes.picker}>\n                <div className={classes.background} onClick={() => showPicker(false)} />\n                <ChromePicker \n                    color={value}\n                    onClick={() => showPicker(false)}\n                    onChange={color =>  setFieldValue(name, color.hex)} \n                />\n            </div>}\n        </div>\n    )\n};\n\nexport default ColorPicker;","import React, { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n    dropzone: {\n        width: '100%',\n        height: 180,\n        padding: theme.spacing(1),\n        cursor: 'pointer',\n        border: `1px dashed ${theme.palette.divider}`,\n        display: 'inline-flex',\n        position: 'relative',\n        outline: 'none !important',\n    },\n    photoPreview: {\n        maxHeight: '100%',  \n        maxWidth: '100%', \n        objectFit: 'cover',\n        width: '100%',\n        height: 180,\n        position: 'absolute',  \n        top: 0, \n        left: 0,\n        zIndex: 0\n    },\n}));\n\nconst Dropzone = ({ url, setFieldValue }) => {\n    const classes = useStyles()\n    const onDrop = useCallback(acceptedFiles => {\n        const reader = new FileReader()\n    \n        reader.onabort = () => console.log('file reading was aborted')\n        reader.onerror = () => console.log('file reading has failed')\n        reader.onload = () => {\n            const binaryStr = reader.result;\n            setFieldValue('url', binaryStr);\n        }\n    \n        reader.readAsDataURL(acceptedFiles[0])\n    }, [setFieldValue])\n    const { getRootProps, getInputProps } = useDropzone({\n        multiple: false,\n        accept: 'image/*',\n        onDrop\n    })\n\n    return (\n        <div {...getRootProps({ className: classes.dropzone })}>\n            <input {...getInputProps()} />\n            <Typography>Drag 'n' drop some photo here, or click to select photo*</Typography>\n            {url && <img\n                className={classes.photoPreview}\n                src={url}\n                alt='Preview'\n            />}\n        </div>\n    )\n};\n\nexport default Dropzone;","export const tooltipPositions = [\n    {\n        value: 'top',\n        label: 'Top',\n    },\n    {\n        value: 'bottom',\n        label: 'Bottom',\n    },\n    {\n        value: 'left',\n        label: 'Left',\n    },\n    {\n        value: 'right',\n        label: 'Right',\n    },\n];","import * as Yup from 'yup';\n\nexport const validation = Yup.object().shape({\n    url: Yup.string()\n        .required('Upload photo'),\n    title: Yup.string()\n        .min(2, 'Title is too smal')\n        .max(20, 'Title is to long')\n        .required('Title is required'),\n    tooltip: Yup.object().shape({\n        color: Yup.string()\n            .required('Choose color'),\n        position: Yup.string()\n            .required('Choose position')\n    })\n});","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\n\nimport { addItemRoutine } from '../ducks/routines';\nimport ColorPicker from './ColorPicker';\nimport Dropzone from './Dropzone';\nimport { tooltipPositions } from '../ducks/tooltipPositions';\nimport { validation } from '../ducks/validation';\n\nconst CreateItemDialog = ({ open, closeDialog }) => {\n    const dispatch = useDispatch()\n\n    return (\n        <Dialog open={open} onClose={closeDialog}>\n            <DialogTitle>\n                Create New Item\n            </DialogTitle>\n            <Formik\n                initialValues={{\n                    url: '',\n                    title: '',\n                    tooltip: {\n                        color: '',\n                        position: ''\n                    }\n                }}\n                validationSchema={validation}\n                onSubmit={values => {\n                    dispatch(addItemRoutine({ ...values }))\n                    closeDialog()\n                }}\n            >\n                {({ \n                    isValid, \n                    handleSubmit, \n                    handleChange, \n                    handleBlur, \n                    values, \n                    errors, \n                    touched, \n                    setFieldValue\n                }) => (\n                    <form onSubmit={handleSubmit} autoComplete=\"off\">\n                        <DialogContent>\n                            <Dropzone setFieldValue={setFieldValue} url={values.url} />\n                            <TextField\n                                name=\"title\"\n                                type=\"text\"\n                                label=\"Photo title\"\n                                placeholder=\"Photo title\"\n                                margin=\"normal\"\n                                fullWidth\n                                value={values.title}\n                                onChange={handleChange}\n                                onBlur={handleBlur} \n                                helperText={touched.title ? errors.title : \"\"}\n                                error={touched.title && Boolean(errors.title)}\n                            />\n                            <ColorPicker\n                                name=\"tooltip.color\"\n                                label=\"Tooltip color\"\n                                placeholder=\"Tooltip color\"\n                                setFieldValue={setFieldValue}\n                                handleBlur={handleBlur} \n                                value={values.tooltip.color}\n                                touched={touched.tooltip && touched.tooltip.color}\n                                error={errors.tooltip && errors.tooltip.color}\n                            />\n                            <TextField\n                                name=\"tooltip.position\" \n                                type=\"text\"\n                                label=\"Tooltip position\"\n                                placeholder=\"Tooltip position\"\n                                margin=\"normal\"\n                                fullWidth\n                                select\n                                onChange={handleChange}\n                                onBlur={handleBlur} \n                                value={values.tooltip.position}\n                                helperText={touched.tooltip && touched.tooltip.position ? \n                                    errors.tooltip && errors.tooltip.position \n                                    : \"\"}\n                                error={touched.tooltip && touched.tooltip.position \n                                    && Boolean(errors.tooltip && errors.tooltip.position)}\n                            >\n                                {tooltipPositions.map(option => (\n                                    <MenuItem \n                                        key={option.value} \n                                        value={option.value}\n                                    >\n                                        {option.label}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button \n                                type=\"button\" \n                                color=\"secondary\"\n                                onClick={() => closeDialog()}\n                            >\n                                Cancel\n                            </Button>\n                            <Button \n                                type=\"submit\"\n                                color=\"primary\"\n                                disabled={!isValid}\n                            >\n                                Create\n                            </Button>\n                        </DialogActions>\n                    </form>\n                )}\n            </Formik>\n        </Dialog>\n    )\n};\n\nexport default CreateItemDialog;","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport { updateItemRoutine, deleteItemRoutine } from '../ducks/routines';\nimport ColorPicker from './ColorPicker';\nimport Dropzone from './Dropzone';\nimport { tooltipPositions } from '../ducks/tooltipPositions';\nimport { validation } from '../ducks/validation';\n\nconst useStyles = makeStyles(theme => ({\n    leftIcon: {\n        marginRight: theme.spacing(1),\n    },\n    grow: {\n        flexGrow: 1,\n    },\n}));\n\nconst UpdateItemDialog = ({ initialValues, open, closeDialog }) => {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n\n    return (\n        <Dialog open={open} onClose={closeDialog}>\n            <DialogTitle>\n                Update Item\n            </DialogTitle>\n            <Formik\n                initialValues={initialValues}\n                validationSchema={validation}\n                onSubmit={values => {\n                    dispatch(updateItemRoutine({ ...values }))\n                    closeDialog()\n                }}\n            >\n                {({ \n                    isValid, \n                    handleSubmit, \n                    handleChange, \n                    handleBlur, \n                    values, \n                    errors, \n                    touched, \n                    setFieldValue\n                }) => (\n                    <form onSubmit={handleSubmit} autoComplete=\"off\">\n                        <DialogContent>\n                            <Dropzone setFieldValue={setFieldValue} url={values.url} />\n                            <TextField\n                                name=\"title\"\n                                type=\"text\"\n                                label=\"Photo title\"\n                                placeholder=\"Photo title\"\n                                margin=\"normal\"\n                                fullWidth\n                                value={values.title}\n                                onChange={handleChange}\n                                onBlur={handleBlur} \n                                helperText={touched.title ? errors.title : \"\"}\n                                error={touched.title && Boolean(errors.title)}\n                            />\n                            <ColorPicker\n                                name=\"tooltip.color\"\n                                label=\"Tooltip color\"\n                                placeholder=\"Tooltip color\"\n                                setFieldValue={setFieldValue}\n                                handleBlur={handleBlur} \n                                value={values.tooltip.color}\n                                touched={touched.tooltip && touched.tooltip.color}\n                                error={errors.tooltip && errors.tooltip.color}\n                            />\n                            <TextField\n                                name=\"tooltip.position\" \n                                type=\"text\"\n                                label=\"Tooltip position\"\n                                placeholder=\"Tooltip position\"\n                                margin=\"normal\"\n                                fullWidth\n                                select\n                                onChange={handleChange}\n                                onBlur={handleBlur} \n                                value={values.tooltip.position}\n                                helperText={touched.tooltip && touched.tooltip.position ? \n                                    errors.tooltip && errors.tooltip.position \n                                    : \"\"}\n                                error={touched.tooltip && touched.tooltip.position \n                                    && Boolean(errors.tooltip && errors.tooltip.position)}\n                            >\n                                {tooltipPositions.map(option => (\n                                    <MenuItem \n                                        key={option.value} \n                                        value={option.value}\n                                    >\n                                        {option.label}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button \n                                type=\"button\"\n                                onClick={() => {\n                                    dispatch(deleteItemRoutine({ ...values }))\n                                    closeDialog()\n                                }}\n                            >\n                                <DeleteIcon className={classes.leftIcon} />\n                                Delete\n                            </Button>\n                            <div className={classes.grow}/>\n                            <Button \n                                type=\"button\" \n                                color=\"secondary\"\n                                onClick={() => closeDialog()}\n                            >\n                                Cancel\n                            </Button>\n                            <Button \n                                type=\"submit\"\n                                color=\"primary\"\n                                disabled={!isValid}\n                            >\n                                Update\n                            </Button>\n                        </DialogActions>\n                    </form>\n                )}\n            </Formik>\n        </Dialog>\n    )\n};\n\nexport default UpdateItemDialog;","import React, { useState } from 'react';\nimport clsx from 'clsx';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        position: 'relative'\n    },\n    tooltip: {\n        position: 'absolute',\n        zIndex: 1500,\n    },\n    bottom: {\n        top: '100%',\n        left: '50%',\n        transform: 'translateX(-50%)',\n        marginTop: theme.spacing(1)\n    },\n    top: {\n        bottom: '100%',\n        left: '50%',\n        transform: 'translateX(-50%)',\n        marginBottom: theme.spacing(1)\n    },\n    left: {\n        right: '100%',\n        top: '50%',\n        transform: 'translateY(-50%)',\n        marginRight: theme.spacing(1)\n    },\n    right: {\n        left: '100%',\n        top: '50%',\n        transform: 'translateY(-50%)',\n        marginLeft: theme.spacing(1)\n    },\n    container: {\n        color: '#ffffff',\n        background: props => props.color,\n        padding: theme.spacing(1),\n        borderRadius: theme.spacing(1)\n    }\n}));\n\nconst Tooltip = ({ \n    children, \n    position = 'top', \n    color = '#000000', \n    title = 'Tooltip'\n}) => {\n    const classes = useStyles({ color })\n    const [visibility, setVisibility] = useState(false)\n\n    return (\n        <div \n            className={classes.root}\n            onMouseEnter={() => setVisibility(true)}\n            onMouseLeave={() => setVisibility(false)}\n        >\n            {children}\n            {visibility && <div className={clsx(classes.tooltip, classes[position])}>\n                <div className={classes.container}>\n                    <Typography variant=\"caption\">\n                        {title}\n                    </Typography>\n                </div>\n            </div>}\n        </div>\n    )\n};\n\nexport default Tooltip;","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n    media: {\n        height: 180,\n    },\n}));\n\nconst PhotoCard = ({ title, url, openDialog }) => {\n    const classes = useStyles()\n\n    return (\n        <Card onClick={() => openDialog()}>\n            <CardActionArea>\n                <CardMedia\n                    className={classes.media}\n                    image={url}\n                    title={title}\n                />\n                <CardContent>\n                    <Typography variant=\"h6\">\n                        {title}\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n        </Card>\n    )\n};\n\nexport default PhotoCard;","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\n\nimport { getItemsRoutine } from '../ducks/routines';\nimport CreateItemDialog from './CreateItemDialog';\nimport UpdateItemDialog from './UpdateItemDialog';\nimport Tooltip from './Tooltip';\nimport PhotoCard from './PhotoCard';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        height: '100vh',\n        position: 'relative'\n    },\n    toolbar: {\n        borderBottom: `1px solid ${theme.palette.divider}`,\n        padding: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n    gridRoot: {\n        flexGrow: 1,\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    progress: {\n        margin: theme.spacing(2),\n    },\n    fab: {\n        position: 'absolute',\n        top: 'auto',\n        left: 'auto',\n        right: theme.spacing(3),\n        bottom: theme.spacing(3),\n        margin: 0,\n    }\n}));\n\nconst MainPage = () => {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    \n    const [openCreateItemDialog, setOpenCreateItemDialog] = useState(false);\n    const [openUpdateItemDialog, setOpenUpdateItemDialog] = useState({\n        open: false,\n        initialValues: null\n    });\n\n    const items = useSelector(state => state.items)\n    const loading = useSelector(state => state.loading)\n    const error = useSelector(state => state.error)\n\n    useEffect(() => {\n        dispatch(getItemsRoutine())\n    }, [dispatch]);\n\n    return (\n        <>\n            <CssBaseline />\n            <Container maxWidth=\"lg\" className={classes.container}>\n                <Toolbar className={classes.toolbar} disableGutters>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Photos Admin Panel\n                    </Typography>\n                </Toolbar>\n                <Grid \n                    container \n                    className={classes.gridRoot}\n                    justify={loading || error ? \"center\" : \"flex-start\"}\n                    spacing={2}\n                >\n                    {loading && <CircularProgress className={classes.progress} />}\n                    {error && <Grid item xs={12}>\n                        <Typography color=\"error\">\n                            {error}\n                        </Typography>\n                    </Grid>}\n                    {!loading && items.length === 0 && <Grid item xs={12}>\n                        <Typography>\n                            There is no items...\n                        </Typography>\n                    </Grid>}\n                    {!loading && items.length > 0 && items.map(item => (\n                        <Grid \n                            key={item.id} \n                            item \n                            xs={12} \n                            sm={6} \n                            md={4}\n                        >\n                            <Tooltip \n                                title={item.title} \n                                {...item.tooltip}\n                            >\n                                <PhotoCard\n                                    title={item.title}\n                                    url={item.url}\n                                    openDialog={() => setOpenUpdateItemDialog({ \n                                        initialValues: item, \n                                        open: true \n                                    })}\n                                />\n                            </Tooltip>\n                        </Grid>\n                    ))}\n                </Grid>\n                <Fab\n                    className={classes.fab}\n                    color=\"secondary\" \n                    onClick={() => setOpenCreateItemDialog(true)}\n                >\n                    <AddIcon />\n                </Fab>\n                <CreateItemDialog \n                    open={openCreateItemDialog} \n                    closeDialog={() => setOpenCreateItemDialog(false)}\n                />\n                <UpdateItemDialog \n                    initialValues={openUpdateItemDialog.initialValues}\n                    open={openUpdateItemDialog.open} \n                    closeDialog={() => setOpenUpdateItemDialog({ \n                        initialValues: null, \n                        open: false \n                    })}\n                />\n            </Container>\n        </>\n    )\n};\n\nexport default MainPage;","import React from 'react';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { Provider } from 'react-redux';\n\nimport store from './ducks/store';\nimport MainPage from './components/MainPage';\n\nconst theme = createMuiTheme({\n    typography: {\n        fontFamily: [\n          'Muli',\n          'sans-serif'\n        ].join(','),\n    }\n});\n\nconst App = () => (\n    <ThemeProvider theme={theme}>\n        <Provider store={store}>\n            <MainPage />\n        </Provider>\n    </ThemeProvider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}